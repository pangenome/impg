name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust: [stable]
    
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        override: true
    
    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake zlib1g-dev
    
    - name: Install dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install cmake zlib gcc make zstd
        # Force GNU make to be used instead of BSD make
        echo "/opt/homebrew/opt/make/libexec/gnubin" >> $GITHUB_PATH
        # Set MAKE environment variable as backup
        echo "MAKE=gmake" >> $GITHUB_ENV
        # Verify we're using GNU make
        echo "Checking make version:"
        which make || true
        make --version || true
        which gmake || true
        gmake --version || true

    - name: Build
      run: cargo build --verbose
    
    - name: Run tests
      run: cargo test --verbose
